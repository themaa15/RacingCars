package GUI;

import Data.Car;
import Model.CarModel;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import static java.lang.Thread.sleep;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author maxth
 */
public class GUI extends javax.swing.JFrame {

    CarModel m = new CarModel();
    WinnerFrame f = new WinnerFrame();
    int carid;
    Random rd = new Random();
    long endtime;
    long starttime;
    double time;

    public GUI() {
        initComponents();
        RacingTable.setModel(m);
        this.setTitle("Racing-Cars");
        this.setSize(707, 507);
        this.setResizable(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        this.setResizable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnAutoshow = new javax.swing.JPanel();
        pnRaceCar1 = new javax.swing.JPanel();
        pbCar1 = new javax.swing.JProgressBar();
        pnCar1 = new javax.swing.JPanel();
        pnCar1Icon = new javax.swing.JPanel();
        lbCar1Icon = new javax.swing.JLabel();
        pnCar1Deco = new javax.swing.JPanel();
        pnCar1FinisLine = new javax.swing.JPanel();
        lbCar1FinishLine = new javax.swing.JLabel();
        pnRaceCar2 = new javax.swing.JPanel();
        pbCar2 = new javax.swing.JProgressBar();
        pnCar2 = new javax.swing.JPanel();
        pnCar2Icon = new javax.swing.JPanel();
        lbCar2Icon = new javax.swing.JLabel();
        pnCar2Deco = new javax.swing.JPanel();
        pnCar2FinishLine = new javax.swing.JPanel();
        lbCar2FinishLine = new javax.swing.JLabel();
        pnRaceCar3 = new javax.swing.JPanel();
        pbCar3 = new javax.swing.JProgressBar();
        jPanel6 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        pnRaceCar4 = new javax.swing.JPanel();
        pbCar4 = new javax.swing.JProgressBar();
        jPanel5 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        pnDaten = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RacingTable = new javax.swing.JTable();
        pnNamen = new javax.swing.JPanel();
        lbtypauto1 = new javax.swing.JLabel();
        tftypauto1 = new javax.swing.JTextField();
        lbfahrerauto1 = new javax.swing.JLabel();
        tffahrerauto1 = new javax.swing.JTextField();
        decolabel1 = new javax.swing.JLabel();
        decolabel2 = new javax.swing.JLabel();
        lbtypauto2 = new javax.swing.JLabel();
        tftypauto2 = new javax.swing.JTextField();
        lbfahrerauto2 = new javax.swing.JLabel();
        tffahrerauto2 = new javax.swing.JTextField();
        decolabel3 = new javax.swing.JLabel();
        decolabel4 = new javax.swing.JLabel();
        lbtypauto3 = new javax.swing.JLabel();
        tftypauto3 = new javax.swing.JTextField();
        lbfahrerauto3 = new javax.swing.JLabel();
        tffahrerauto3 = new javax.swing.JTextField();
        decolabel5 = new javax.swing.JLabel();
        decolabel6 = new javax.swing.JLabel();
        lbtypauto4 = new javax.swing.JLabel();
        tftypauto4 = new javax.swing.JTextField();
        lbfahrerauto4 = new javax.swing.JLabel();
        tffahrerauto4 = new javax.swing.JTextField();
        btstart = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        mbDatei = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        miLoad = new javax.swing.JMenuItem();
        miSave = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        pnAutoshow.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rennen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("OCR A Extended", 0, 13))); // NOI18N
        pnAutoshow.setLayout(new java.awt.GridLayout(4, 1));

        pnRaceCar1.setLayout(new java.awt.BorderLayout());

        pbCar1.setForeground(new java.awt.Color(180, 119, 96));
        pbCar1.setMaximum(10000);
        pnRaceCar1.add(pbCar1, java.awt.BorderLayout.PAGE_END);

        pnCar1.setLayout(new java.awt.GridLayout(1, 3));

        pnCar1Icon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lbCar1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car1.png"))); // NOI18N

        javax.swing.GroupLayout pnCar1IconLayout = new javax.swing.GroupLayout(pnCar1Icon);
        pnCar1Icon.setLayout(pnCar1IconLayout);
        pnCar1IconLayout.setHorizontalGroup(
            pnCar1IconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbCar1Icon, javax.swing.GroupLayout.PREFERRED_SIZE, 156, Short.MAX_VALUE)
        );
        pnCar1IconLayout.setVerticalGroup(
            pnCar1IconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbCar1Icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnCar1.add(pnCar1Icon);

        javax.swing.GroupLayout pnCar1DecoLayout = new javax.swing.GroupLayout(pnCar1Deco);
        pnCar1Deco.setLayout(pnCar1DecoLayout);
        pnCar1DecoLayout.setHorizontalGroup(
            pnCar1DecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );
        pnCar1DecoLayout.setVerticalGroup(
            pnCar1DecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 52, Short.MAX_VALUE)
        );

        pnCar1.add(pnCar1Deco);

        lbCar1FinishLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/finnishline.png"))); // NOI18N

        javax.swing.GroupLayout pnCar1FinisLineLayout = new javax.swing.GroupLayout(pnCar1FinisLine);
        pnCar1FinisLine.setLayout(pnCar1FinisLineLayout);
        pnCar1FinisLineLayout.setHorizontalGroup(
            pnCar1FinisLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCar1FinisLineLayout.createSequentialGroup()
                .addGap(0, 57, Short.MAX_VALUE)
                .addComponent(lbCar1FinishLine, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnCar1FinisLineLayout.setVerticalGroup(
            pnCar1FinisLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbCar1FinishLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnCar1.add(pnCar1FinisLine);

        pnRaceCar1.add(pnCar1, java.awt.BorderLayout.CENTER);

        pnAutoshow.add(pnRaceCar1);

        pnRaceCar2.setLayout(new java.awt.BorderLayout());

        pbCar2.setForeground(new java.awt.Color(102, 102, 102));
        pbCar2.setMaximum(10000);
        pnRaceCar2.add(pbCar2, java.awt.BorderLayout.PAGE_END);

        pnCar2.setLayout(new java.awt.GridLayout(1, 3));

        lbCar2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car2_.png"))); // NOI18N

        javax.swing.GroupLayout pnCar2IconLayout = new javax.swing.GroupLayout(pnCar2Icon);
        pnCar2Icon.setLayout(pnCar2IconLayout);
        pnCar2IconLayout.setHorizontalGroup(
            pnCar2IconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbCar2Icon, javax.swing.GroupLayout.PREFERRED_SIZE, 156, Short.MAX_VALUE)
        );
        pnCar2IconLayout.setVerticalGroup(
            pnCar2IconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbCar2Icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnCar2.add(pnCar2Icon);

        javax.swing.GroupLayout pnCar2DecoLayout = new javax.swing.GroupLayout(pnCar2Deco);
        pnCar2Deco.setLayout(pnCar2DecoLayout);
        pnCar2DecoLayout.setHorizontalGroup(
            pnCar2DecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );
        pnCar2DecoLayout.setVerticalGroup(
            pnCar2DecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 52, Short.MAX_VALUE)
        );

        pnCar2.add(pnCar2Deco);

        lbCar2FinishLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/finnishline.png"))); // NOI18N

        javax.swing.GroupLayout pnCar2FinishLineLayout = new javax.swing.GroupLayout(pnCar2FinishLine);
        pnCar2FinishLine.setLayout(pnCar2FinishLineLayout);
        pnCar2FinishLineLayout.setHorizontalGroup(
            pnCar2FinishLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCar2FinishLineLayout.createSequentialGroup()
                .addGap(0, 58, Short.MAX_VALUE)
                .addComponent(lbCar2FinishLine, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnCar2FinishLineLayout.setVerticalGroup(
            pnCar2FinishLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbCar2FinishLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnCar2.add(pnCar2FinishLine);

        pnRaceCar2.add(pnCar2, java.awt.BorderLayout.CENTER);

        pnAutoshow.add(pnRaceCar2);

        pnRaceCar3.setLayout(new java.awt.BorderLayout());

        pbCar3.setForeground(new java.awt.Color(0, 153, 51));
        pbCar3.setMaximum(10000);
        pnRaceCar3.add(pbCar3, java.awt.BorderLayout.PAGE_END);

        jPanel6.setLayout(new java.awt.GridLayout(1, 3));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car3.png"))); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel6.add(jPanel16);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 52, Short.MAX_VALUE)
        );

        jPanel6.add(jPanel17);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/finnishline.png"))); // NOI18N

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(0, 57, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel6.add(jPanel15);

        pnRaceCar3.add(jPanel6, java.awt.BorderLayout.CENTER);

        pnAutoshow.add(pnRaceCar3);

        pnRaceCar4.setLayout(new java.awt.BorderLayout());

        pbCar4.setForeground(new java.awt.Color(51, 153, 255));
        pbCar4.setMaximum(10000);
        pnRaceCar4.add(pbCar4, java.awt.BorderLayout.PAGE_END);

        jPanel5.setLayout(new java.awt.GridLayout(1, 3));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car4.png"))); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel20);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 52, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel19);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/finnishline.png"))); // NOI18N

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGap(0, 59, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel18);

        pnRaceCar4.add(jPanel5, java.awt.BorderLayout.CENTER);

        pnAutoshow.add(pnRaceCar4);

        getContentPane().add(pnAutoshow);
        pnAutoshow.setBounds(220, 0, 480, 290);

        pnDaten.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Renn-Liste", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("OCR A Extended", 0, 13))); // NOI18N
        pnDaten.setLayout(new java.awt.GridLayout(1, 1));

        RacingTable.setModel(m);
        jScrollPane1.setViewportView(RacingTable);

        pnDaten.add(jScrollPane1);

        getContentPane().add(pnDaten);
        pnDaten.setBounds(220, 290, 480, 160);

        pnNamen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fahrer-Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("OCR A Extended", 0, 13))); // NOI18N
        pnNamen.setLayout(new java.awt.GridLayout(12, 2));

        lbtypauto1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lbtypauto1.setText("Typ (Auto1):");
        pnNamen.add(lbtypauto1);

        tftypauto1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tftypauto1.setText("Ford Focus");
        pnNamen.add(tftypauto1);

        lbfahrerauto1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lbfahrerauto1.setText("Fahrer (Auto1):");
        pnNamen.add(lbfahrerauto1);

        tffahrerauto1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tffahrerauto1.setText("James Speed");
        pnNamen.add(tffahrerauto1);
        pnNamen.add(decolabel1);
        pnNamen.add(decolabel2);

        lbtypauto2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lbtypauto2.setText("Typ (Auto2):");
        pnNamen.add(lbtypauto2);

        tftypauto2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tftypauto2.setText("Mercedes S-Class");
        pnNamen.add(tftypauto2);

        lbfahrerauto2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lbfahrerauto2.setText("Fahrer (Auto2):");
        pnNamen.add(lbfahrerauto2);

        tffahrerauto2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tffahrerauto2.setText("Alex Lightning");
        pnNamen.add(tffahrerauto2);
        pnNamen.add(decolabel3);
        pnNamen.add(decolabel4);

        lbtypauto3.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lbtypauto3.setText("Typ (Auto3):");
        pnNamen.add(lbtypauto3);

        tftypauto3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tftypauto3.setText("Audi RS6");
        pnNamen.add(tftypauto3);

        lbfahrerauto3.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lbfahrerauto3.setText("Fahrer (Auto3):");
        pnNamen.add(lbfahrerauto3);

        tffahrerauto3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tffahrerauto3.setText("Tom Fast");
        pnNamen.add(tffahrerauto3);
        pnNamen.add(decolabel5);
        pnNamen.add(decolabel6);

        lbtypauto4.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lbtypauto4.setText("Typ (Auto4):");
        pnNamen.add(lbtypauto4);

        tftypauto4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tftypauto4.setText("Fiat Punto");
        pnNamen.add(tftypauto4);

        lbfahrerauto4.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lbfahrerauto4.setText("Fahrer (Auto4):");
        pnNamen.add(lbfahrerauto4);

        tffahrerauto4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tffahrerauto4.setText("Herold Bolt");
        pnNamen.add(tffahrerauto4);

        btstart.setText("Start");
        btstart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onStart(evt);
            }
        });
        pnNamen.add(btstart);
        pnNamen.add(jButton2);

        getContentPane().add(pnNamen);
        pnNamen.setBounds(0, 0, 220, 450);

        menu.setText("Datei");

        miLoad.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        miLoad.setText("Laden");
        miLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onladen(evt);
            }
        });
        menu.add(miLoad);

        miSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        miSave.setText("Speichern");
        miSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSpeichern(evt);
            }
        });
        menu.add(miSave);

        mbDatei.add(menu);

        setJMenuBar(mbDatei);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onladen(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onladen
        try {
            m.read(new File("src/Resources/Racinglist.csv"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Fehler beim laden der Datei!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_onladen

    private void onSpeichern(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSpeichern
        try {
            m.write(new File("src/Resources/Racinglist.csv"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Fehler beim der Datei!");
        }
    }//GEN-LAST:event_onSpeichern

    private void onStart(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onStart
        Car1 car = new Car1();
        car.start();
        Car2 car2 = new Car2();
        car2.start();
        Car3 car3 = new Car3();
        car3.start();
        Car4 car4 = new Car4();
        car4.start();
        carid = 1000;
        while (car.isAlive() || car2.isAlive() || car3.isAlive() || car4.isAlive()) {
            pbCar1.repaint();
            pbCar2.repaint();
            pbCar3.repaint();
            pbCar4.repaint();
        }

        Double[] sortieren = new Double[4];
        sortieren[0] = car.getTime();
        sortieren[1] = car2.getTime();
        sortieren[2] = car3.getTime();
        sortieren[3] = car4.getTime();

        int n = sortieren.length;
        double temp = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 1; j < (n - i); j++) {
                if (sortieren[j - 1] > sortieren[j]) {
                    //swap elements  
                    temp = sortieren[j - 1];
                    sortieren[j - 1] = sortieren[j];
                    sortieren[j] = temp;
                }
            }
        }
        System.out.println("");
        System.out.println("Sortiert:");
        System.out.println(sortieren[0]);
        System.out.println(sortieren[1]);
        System.out.println(sortieren[2]);
        System.out.println(sortieren[3]);

        if (car.getTime() == sortieren[0]) {
            m.add(new Car(carid++, tftypauto1.getText(), tffahrerauto1.getText(), car.getTime(), 1));
            f.tfwinner.setText("Car 1");
            f.setVisible(true);
        } else if (car.getTime() == sortieren[1]) {
            m.add(new Car(carid++, tftypauto1.getText(), tffahrerauto1.getText(), car.getTime(), 2));
        } else if (car.getTime() == sortieren[2]) {
            m.add(new Car(carid++, tftypauto1.getText(), tffahrerauto1.getText(), car.getTime(), 3));
        } else if (car.getTime() == sortieren[3]) {
            m.add(new Car(carid++, tftypauto1.getText(), tffahrerauto1.getText(), car.getTime(), 4));
        }

        if (car2.getTime() == sortieren[0]) {
            m.add(new Car(carid++, tftypauto2.getText(), tffahrerauto2.getText(), car2.getTime(), 1));
            f.tfwinner.setText("Car 2");
            f.setVisible(true);
        } else if (car2.getTime() == sortieren[1]) {
            m.add(new Car(carid++, tftypauto2.getText(), tffahrerauto2.getText(), car2.getTime(), 2));
        } else if (car2.getTime() == sortieren[2]) {
            m.add(new Car(carid++, tftypauto2.getText(), tffahrerauto2.getText(), car2.getTime(), 3));
        } else if (car2.getTime() == sortieren[3]) {
            m.add(new Car(carid++, tftypauto2.getText(), tffahrerauto2.getText(), car2.getTime(), 4));
        }

        if (car3.getTime() == sortieren[0]) {
            m.add(new Car(carid++, tftypauto3.getText(), tffahrerauto3.getText(), car3.getTime(), 1));
            f.tfwinner.setText("Car 3");
            f.setVisible(true);
        } else if (car3.getTime() == sortieren[1]) {
            m.add(new Car(carid++, tftypauto3.getText(), tffahrerauto3.getText(), car3.getTime(), 2));
        } else if (car3.getTime() == sortieren[2]) {
            m.add(new Car(carid++, tftypauto3.getText(), tffahrerauto3.getText(), car3.getTime(), 3));
        } else if (car3.getTime() == sortieren[3]) {
            m.add(new Car(carid++, tftypauto3.getText(), tffahrerauto3.getText(), car3.getTime(), 4));
        }

        if (car4.getTime() == sortieren[0]) {
            m.add(new Car(carid++, tftypauto4.getText(), tffahrerauto4.getText(), car4.getTime(), 1));
            f.tfwinner.setText("Car 4");
            f.setVisible(true);
        } else if (car4.getTime() == sortieren[1]) {
            m.add(new Car(carid++, tftypauto4.getText(), tffahrerauto4.getText(), car4.getTime(), 2));
        } else if (car4.getTime() == sortieren[2]) {
            m.add(new Car(carid++, tftypauto4.getText(), tffahrerauto4.getText(), car4.getTime(), 3));
        } else if (car4.getTime() == sortieren[3]) {
            m.add(new Car(carid++, tftypauto4.getText(), tffahrerauto4.getText(), car4.getTime(), 4));
        }
        carid = carid + 4;
    }//GEN-LAST:event_onStart

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Intro i = new Intro();
        i.setVisible(true);
        i.setAlwaysOnTop(true);
    }//GEN-LAST:event_formWindowOpened

    
    public class Car1 extends Thread {

        private int ziel = pbCar1.getMaximum();
        private int alreadydriven = 0;
        private long endtime;
        private long starttime;
        private double time;

        public void run() {
            starttime = System.currentTimeMillis();
            int unterschied;
            int anz = 1;
            Car o;
            try {
                do {
                    alreadydriven = alreadydriven + rd.nextInt(250 - 1 + 1) + 1;
                    if (alreadydriven <= ziel) {
                        pbCar1.setValue(alreadydriven);
                        pbCar1.repaint();
                    }
                    sleep(50);
                    anz++;
                } while (ziel > alreadydriven);
            } catch (Exception e) {
                System.out.println(e);
            } finally {
                endtime = System.currentTimeMillis();
                time = ((double) endtime - starttime) / 1000;
                System.out.println("Time Car1: " + time);

            }
        }

        public double getTime() {
            return this.time;
        }
    }

    public class Car2 extends Thread {

        String threadname;
        private int ziel = pbCar2.getMaximum();
        private int alreadydriven = 0;
        private long endtime;
        private long starttime;
        private double time;

        public void run() {
            starttime = System.currentTimeMillis();
            int unterschied;
            int anz = 1;
            Car o;
            try {
                do {
                    alreadydriven = alreadydriven + rd.nextInt(250 - 1 + 1) + 1;
                    if (alreadydriven <= ziel) {
                        pbCar2.setValue(alreadydriven);
                        pbCar2.repaint();
                    }
                    sleep(50);
                    anz++;
                } while (ziel > alreadydriven);
            } catch (Exception e) {
                System.out.println(e);
            } finally {
                endtime = System.currentTimeMillis();
                time = ((double) endtime - starttime) / 1000;
                System.out.println("Time Car2: " + time);

            }
        }

        public double getTime() {
            return this.time;
        }
    }

    public class Car3 extends Thread {

        private int ziel = pbCar3.getMaximum();
        private int alreadydriven = 0;
        private long endtime;
        private long starttime;
        private double time;

        public void run() {

            starttime = System.currentTimeMillis();
            int unterschied;
            int anz = 1;
            Car o;
            try {
                do {
                    alreadydriven = alreadydriven + rd.nextInt(250 - 1 + 1) + 1;
                    if (alreadydriven <= ziel) {
                        pbCar3.setValue(alreadydriven);
                        pbCar3.repaint();
                    }
                    sleep(50);
                    anz++;
                } while (ziel > alreadydriven);
            } catch (Exception e) {
                System.out.println(e);
            } finally {
                endtime = System.currentTimeMillis();
                time = ((double) endtime - starttime) / 1000;
                System.out.println("Time Car3: " + time);

            }
        }

        public double getTime() {
            return this.time;
        }
    }

    public class Car4 extends Thread {

        Random rd = new Random();
        String threadname;
        private int ziel = pbCar4.getMaximum();
        private int alreadydriven = 0;
        private long endtime;
        private long starttime;
        private double time;

        public void run() {
            starttime = System.currentTimeMillis();
            int unterschied;
            int anz = 1;
            Car o;
            try {
                do {
                    alreadydriven = alreadydriven + rd.nextInt(250 - 1 + 1) + 1;
                    if (alreadydriven <= ziel) {
                        pbCar4.setValue(alreadydriven);
                        pbCar4.repaint();
                    }
                    sleep(50);
                    anz++;
                } while (ziel > alreadydriven);
            } catch (Exception e) {
                System.out.println(e);
            } finally {
                endtime = System.currentTimeMillis();
                time = ((double) endtime - starttime) / 1000;
                System.out.println("Time Car4: " + time);

            }
        }

        public double getTime() {
            return this.time;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable RacingTable;
    private javax.swing.JButton btstart;
    private javax.swing.JLabel decolabel1;
    private javax.swing.JLabel decolabel2;
    private javax.swing.JLabel decolabel3;
    private javax.swing.JLabel decolabel4;
    private javax.swing.JLabel decolabel5;
    private javax.swing.JLabel decolabel6;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCar1FinishLine;
    private javax.swing.JLabel lbCar1Icon;
    private javax.swing.JLabel lbCar2FinishLine;
    private javax.swing.JLabel lbCar2Icon;
    private javax.swing.JLabel lbfahrerauto1;
    private javax.swing.JLabel lbfahrerauto2;
    private javax.swing.JLabel lbfahrerauto3;
    private javax.swing.JLabel lbfahrerauto4;
    private javax.swing.JLabel lbtypauto1;
    private javax.swing.JLabel lbtypauto2;
    private javax.swing.JLabel lbtypauto3;
    private javax.swing.JLabel lbtypauto4;
    private javax.swing.JMenuBar mbDatei;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuItem miLoad;
    private javax.swing.JMenuItem miSave;
    public javax.swing.JProgressBar pbCar1;
    public javax.swing.JProgressBar pbCar2;
    public javax.swing.JProgressBar pbCar3;
    public javax.swing.JProgressBar pbCar4;
    private javax.swing.JPanel pnAutoshow;
    private javax.swing.JPanel pnCar1;
    private javax.swing.JPanel pnCar1Deco;
    private javax.swing.JPanel pnCar1FinisLine;
    private javax.swing.JPanel pnCar1Icon;
    private javax.swing.JPanel pnCar2;
    private javax.swing.JPanel pnCar2Deco;
    private javax.swing.JPanel pnCar2FinishLine;
    private javax.swing.JPanel pnCar2Icon;
    private javax.swing.JPanel pnDaten;
    private javax.swing.JPanel pnNamen;
    private javax.swing.JPanel pnRaceCar1;
    private javax.swing.JPanel pnRaceCar2;
    private javax.swing.JPanel pnRaceCar3;
    private javax.swing.JPanel pnRaceCar4;
    public javax.swing.JTextField tffahrerauto1;
    public javax.swing.JTextField tffahrerauto2;
    public javax.swing.JTextField tffahrerauto3;
    public javax.swing.JTextField tffahrerauto4;
    public javax.swing.JTextField tftypauto1;
    public javax.swing.JTextField tftypauto2;
    public javax.swing.JTextField tftypauto3;
    public javax.swing.JTextField tftypauto4;
    // End of variables declaration//GEN-END:variables
}
